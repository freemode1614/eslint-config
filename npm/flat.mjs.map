{"version":3,"sources":["../src/flat.ts"],"names":["flat"],"mappings":";;;;;;;;;AAAA,SAAS,eAAe;AAExB,SAAS,oBAAoB;AAU7B,IAAM,WAAW,aAAa,QAAQ,QAAQ,IAAI,GAAG,cAAc,GAAG;AAAA,EACpE,QAAQ;AACV,CAAC;AAED,IAAI,CAAC,UAAU;AACb,QAAM,IAAI;AAAA,IACR;AAAA,EACF;AACF;AAEA,IAAM,EAAE,eAAe,CAAC,GAAG,kBAAkB,CAAC,GAAG,mBAAmB,CAAC,EAAE,IAAI;AAE3E,IAAM,mBAAmB,OAAO,KAAK,OAAO,OAAO,CAAC,GAAG,cAAc,iBAAiB,gBAAgB,CAAC;AAEvG,IAAM,eAAe,iBAAiB,SAAS,OAAO;AAEtD,IAAM,oBAAoB,iBAAiB,SAAS,YAAY;AAChE,IAAM,cAAc,iBAAiB,SAAS,MAAM;AAEpD,IAAM,aAAa,SAAS,SAAS;AAErC,IAAM,UAAU;AAAA,EACd,GAAG,KAAc;AAAA,IACf;AAAA;AAAA,IAEA;AAAA,IACA;AAAA,EACF,CAAC;AAAA,EACD,GAAGA,MAAc;AAAA,EACjB,GAAGA,MAAe;AAAA,EAClB,GAAGA,MAAY;AAAA,EACf,GAAGA,MAAc,EAAE,YAAY,CAAC;AAClC;AAEA,IAAI,CAAC,QAAQ,IAAI,oCAAoC;AACnD,UAAQ,IAAI,6BAA6B;AACzC,UAAQ,IAAI,OAAO;AACnB,UAAQ,IAAI,6BAA6B;AACzC,UAAQ,IAAI,qCAAqC;AACnD;AAEA,IAAO,eAAQ","sourcesContent":["import { resolve } from \"node:path\";\n\nimport { readJSONSync } from \"fs-extra\";\n\nimport { flat as baseConfigGen } from \"@/base\";\nimport { flat as jsonConfigGen } from \"@/overrides/json\";\nimport { flat as reactConfigGen } from \"@/overrides/react\";\nimport { flat as testConfigGen } from \"@/overrides/test\";\nimport { flat as tsConfigGen } from \"@/overrides/typescript\";\n\n/**\n */\nconst package_ = readJSONSync(resolve(process.cwd(), \"package.json\"), {\n  throws: false,\n});\n\nif (!package_) {\n  throw new Error(\n    \"No `package.json` found in local, make sure you using eslint in a valid nodejs package which include a `package.json` file.\",\n  );\n}\n\nconst { dependencies = {}, devDependencies = {}, peerDependencies = {} } = package_;\n\nconst localProjectDeps = Object.keys(Object.assign({}, dependencies, devDependencies, peerDependencies));\n\nconst isUsingReact = localProjectDeps.includes(\"react\");\n// const isUsingPrettier = localProjectDeps.includes(\"prettier\");\nconst isUsingTypescript = localProjectDeps.includes(\"typescript\");\nconst isUsingJest = localProjectDeps.includes(\"jest\");\n\nconst isESModule = package_.type === \"module\";\n\nconst configs = [\n  ...baseConfigGen({\n    isESModule,\n    // isUsingPrettier,\n    isUsingReact,\n    isUsingTypescript,\n  }),\n  ...jsonConfigGen(),\n  ...reactConfigGen(),\n  ...tsConfigGen(),\n  ...testConfigGen({ isUsingJest }),\n];\n\nif (!process.env.DEBUGGER_LOG_MOCCONA_ESLINT_CONFIG) {\n  console.log(`<-------- configs -------->`);\n  console.log(configs);\n  console.log(`<-------- configs -------->`);\n  process.env.DEBUGGER_LOG_MOCCONA_ESLINT_CONFIG = \"LOGGED\";\n}\n\nexport default configs;\n"]}